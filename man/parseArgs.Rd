% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parseArgs.R
\name{parseArgs}
\alias{parseArgs}
\alias{positionalArgs}
\title{Parse command line argument flags}
\usage{
parseArgs(
  requiredArgs = NULL,
  optionalArgs = NULL,
  flags = NULL,
  positionalArgs = FALSE
)

positionalArgs()
}
\arguments{
\item{requiredArgs, optionalArgs}{\code{character} or \code{NULL}.
Valid key-value pair argument names.
For example, \code{aaa} for \code{--aaa=AAA} or \verb{--aaa AAA}.
Note that \verb{--aaa AAA}-style arguments (note lack of \code{=}) are not currently
supported.}

\item{flags}{\code{character} or \code{NULL}.
Valid long flag names.
For example, \code{aaa} for \code{--aaa}.
Short flags, such as \code{-r}, are intentionally not supported.}

\item{positionalArgs}{\code{logical(1)}.
Require positional arguments to be defined.}
}
\value{
\code{list}.
Named list containing arguments, organized by type:
\itemize{
\item \code{requiredArgs}
\item \code{optionalArgs}
\item \code{flags}
\item \code{positionalArgs}
}
}
\description{
Parse command line argument flags
}
\note{
Updated 2020-08-09.
}
\examples{
command <- system.file("scripts", "parse-args", package = "acidbase")
args <- c(
    ## Required args:
    "--aaa=AAA", "--bbb=BBB",
    ## Optional args:
    "--ccc=CCC", "--ddd=DDD",
    ## Flags:
    "--eee", "--fff",
    ## Positional args:
    "GGG", "HHH"
)
readLines(command)
out <- shell(command = command, args = args, stdout = TRUE)
print(out)
}
\seealso{
\itemize{
\item argparse Python package.
\item argparser R package.
\item optparse R package.
}
}
